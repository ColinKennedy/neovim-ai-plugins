name: Generate README.md File

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs weekly at midnight UTC

permissions:
  contents: write
  pull-requests: write

jobs:
  create_pull_request:
    name: Create Pull Request
    runs-on: ubuntu-latest

    env:
      NEW_BRANCH: automatically_update_readme

    steps:
    - name: Checkout Repository
      uses: actions/checkout@master

    - name: Generate README.md File
      uses: ./.github/actions/generate_readme
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check For File Changes
      id: check_changes
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          echo "File changes detected."
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "No file changes detected."
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: No Changes Detected - End Early
      if: ${{ steps.check_changes.outputs.changes == 'false' }}
      run: |
        echo "We will not make a pull request because no files were changed."

    - name: Setup Git Settings
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"

    - name: Create A PR Branch
      if: ${{ steps.check_changes.outputs.changes == 'true' }}
      run: |
        # Create / Recreate the branch
        if git rev-parse --verify $NEW_BRANCH > /dev/null 2>&1; then
          git branch -D $NEW_BRANCH
        fi

        git checkout -b $NEW_BRANCH
        git add -u .
        git commit -m "docs(readme): Auto-generate plugins list"
        git push --force origin $NEW_BRANCH

    - name: Create Pull Request
      if: ${{ steps.check_changes.outputs.changes == 'true' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        title="Automatically Update README.md"
        body="The README.md is out-of-date. This pull request has the latest changes. Please review and approve."
        # NOTE: This is the same as ...
        # default_branch="${{ github.event.repository.default_branch }}"
        # #
        default_branch="`git remote show origin | grep 'HEAD branch' | awk '{print $3}'`"

        echo "Making a pull request from $NEW_BRANCH to $default_branch"

        curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -d "{\"title\":\"$title\",\"body\":\"$body\",\"head\":\"$NEW_BRANCH\",\"base\":\"$default_branch\"}" \
          https://api.github.com/repos/${{ github.repository }}/pulls
